在java领域摸爬3年之际时，跟你有很多共鸣， 
当年，杂七杂八的各种开源第三方工具类用了不少，广而不精， 
当年，也纠结如何提升自己， 纠结该如何走下去。 


我想继续做技术，于是我问了自己几个问题： 

1.既然既然会了很多各种各样的工具，是否对工具的使用有自己的总结？ 

于是，我开始写博客，记录自己的学习成果， 
写一些工具的测试代码，以便以后使用时，拿起来就用 

2.工具的使用都整理了，那么是否整合出自己的一套开发框架？ 
然后我自己就整合了strut2 + spring2.5 + ibatis, 
随着技术的发展，我重新整合了velocity + springmvc + spring3 + mybatis 
包括工程架构：maven结构的工程，优化打包方式（轻松区分本地、测试、上线环境） 
使用代码检查工具：Findbugs CheckStyle 
做到团队代码风格基本一致。 


3.既然整合开发机构，是否能有套生成器，生成基本代码（增删改查）？ 
然后我就使用基础的jdbcapi读取数据库表信息，使用velocity 模板引擎，开发了一套生成器， 给团队工作效率带来了质的提高 

4.以上都有了，如何做分层开发，动静分离？ 
然后，我就将架构中模板引擎部分velocity 去掉， 直接使用html, 动态数据使用异步获取，动态数据服务端返回json， 页面开发人员（会css,js）和服务端开人员各司其职，再一次提高了开发效率 


4.当访问量上来的了，发现页面动态数据访问还是有些慢？ 
然后在不做负载均均衡的情况下， 学了jvm的内存机制和gc调优，最大的优化单机能力 

再然后。。。先省略，看到这里我打算写一篇小博客^_^ 
